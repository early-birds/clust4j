apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

sourceCompatibility = 1.7
targetCompatibility = 1.7
archivesBaseName = 'clust4j'
version = '1.2.4.1-earlybirds'



compileJava {
    options.debug = true
}

repositories {
    mavenCentral()
    jcenter()
}

jar {
    baseName = 'clust4j'
    version = version

    // Load all of the dependencies into the jar
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    // Only include the TestSuite class
    include 'com/clust4j/TestSuite*'
    // Exclude all in load package
    exclude 'com/clust4j/load/**'

    // Need the heap space for some larger tests...
    maxHeapSize = "512m"
    jvmArgs '-XX:MaxPermSize=256m'

    beforeTest { descriptor ->
      logger.lifecycle("Running test: " + descriptor)
    }
}

dependencies {
    compile 'log4j:log4j:1.2.17'
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'junit:junit:4.+'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}


/*
 * Settings for jacoco coverage report
 */
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

// needed for Travis CI
check.dependsOn jacocoTestReport

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'
buildscript {
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
    }
    repositories {
        maven {
            url "http://repository.jboss.org/nexus/content/groups/public/"
        }
        mavenLocal()
        mavenCentral()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'tgsmith61591'
            artifactId 'clust4j'
            version version

            from components.java
        }
    }

    repositories {
        maven {
            if (project.version.endsWith("-SNAPSHOT")) {
                name = "$artifactorySnapshotsName"
                url "$artifactorySnapshotsUrl"
            } else {
                name = "$artifactoryReleasesName"
                url "$artifactoryReleasesUrl"
            }
        }
    }
}
